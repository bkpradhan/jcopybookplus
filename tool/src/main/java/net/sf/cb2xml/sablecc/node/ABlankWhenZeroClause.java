/* This file was generated by SableCC (http://www.sablecc.org/). */
package net.sf.cb2xml.sablecc.node;

import net.sf.cb2xml.sablecc.analysis.*;

import java.util.*;


public final class ABlankWhenZeroClause extends PBlankWhenZeroClause
{
    private TBlank _blank_;
    private TWhen _when_;
    private TZeros _zeros_;

    public ABlankWhenZeroClause ()
    {
    }

    public ABlankWhenZeroClause (TBlank _blank_, TWhen _when_, TZeros _zeros_)
    {
        setBlank (_blank_);

        setWhen (_when_);

        setZeros (_zeros_);
    }

    public Object clone ()
    {
        return new ABlankWhenZeroClause((TBlank) cloneNode (_blank_),
            (TWhen) cloneNode (_when_), (TZeros) cloneNode (_zeros_));
    }

    public void apply (Switch sw)
    {
        ((Analysis) sw).caseABlankWhenZeroClause (this);
    }

    public TBlank getBlank ()
    {
        return _blank_;
    }

    public void setBlank (TBlank node)
    {
        if (_blank_ != null)
        {
            _blank_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _blank_ = node;
    }

    public TWhen getWhen ()
    {
        return _when_;
    }

    public void setWhen (TWhen node)
    {
        if (_when_ != null)
        {
            _when_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _when_ = node;
    }

    public TZeros getZeros ()
    {
        return _zeros_;
    }

    public void setZeros (TZeros node)
    {
        if (_zeros_ != null)
        {
            _zeros_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _zeros_ = node;
    }

    public String toString ()
    {
        return "" + toString (_blank_) + toString (_when_) +
        toString (_zeros_);
    }

    void removeChild (Node child)
    {
        if (_blank_ == child)
        {
            _blank_ = null;

            return;
        }

        if (_when_ == child)
        {
            _when_ = null;

            return;
        }

        if (_zeros_ == child)
        {
            _zeros_ = null;

            return;
        }
    }

    void replaceChild (Node oldChild, Node newChild)
    {
        if (_blank_ == oldChild)
        {
            setBlank ((TBlank) newChild);

            return;
        }

        if (_when_ == oldChild)
        {
            setWhen ((TWhen) newChild);

            return;
        }

        if (_zeros_ == oldChild)
        {
            setZeros ((TZeros) newChild);

            return;
        }
    }
}
