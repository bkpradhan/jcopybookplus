/* This file was generated by SableCC (http://www.sablecc.org/). */
package net.sf.cb2xml.sablecc.node;

import net.sf.cb2xml.sablecc.analysis.*;

import java.util.*;


public final class ANumericLiteralLiteral extends PLiteral
{
    private TNumericLiteral _numericLiteral_;

    public ANumericLiteralLiteral ()
    {
    }

    public ANumericLiteralLiteral (TNumericLiteral _numericLiteral_)
    {
        setNumericLiteral (_numericLiteral_);
    }

    public Object clone ()
    {
        return new ANumericLiteralLiteral((TNumericLiteral) cloneNode (
                _numericLiteral_));
    }

    public void apply (Switch sw)
    {
        ((Analysis) sw).caseANumericLiteralLiteral (this);
    }

    public TNumericLiteral getNumericLiteral ()
    {
        return _numericLiteral_;
    }

    public void setNumericLiteral (TNumericLiteral node)
    {
        if (_numericLiteral_ != null)
        {
            _numericLiteral_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _numericLiteral_ = node;
    }

    public String toString ()
    {
        return "" + toString (_numericLiteral_);
    }

    void removeChild (Node child)
    {
        if (_numericLiteral_ == child)
        {
            _numericLiteral_ = null;

            return;
        }
    }

    void replaceChild (Node oldChild, Node newChild)
    {
        if (_numericLiteral_ == oldChild)
        {
            setNumericLiteral ((TNumericLiteral) newChild);

            return;
        }
    }
}
