/* This file was generated by SableCC (http://www.sablecc.org/). */
package net.sf.cb2xml.sablecc.node;

import net.sf.cb2xml.sablecc.analysis.*;

import java.util.*;


public final class ALeftLeftOrRight extends PLeftOrRight
{
    private TLeft _left_;

    public ALeftLeftOrRight ()
    {
    }

    public ALeftLeftOrRight (TLeft _left_)
    {
        setLeft (_left_);
    }

    public Object clone ()
    {
        return new ALeftLeftOrRight((TLeft) cloneNode (_left_));
    }

    public void apply (Switch sw)
    {
        ((Analysis) sw).caseALeftLeftOrRight (this);
    }

    public TLeft getLeft ()
    {
        return _left_;
    }

    public void setLeft (TLeft node)
    {
        if (_left_ != null)
        {
            _left_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _left_ = node;
    }

    public String toString ()
    {
        return "" + toString (_left_);
    }

    void removeChild (Node child)
    {
        if (_left_ == child)
        {
            _left_ = null;

            return;
        }
    }

    void replaceChild (Node oldChild, Node newChild)
    {
        if (_left_ == oldChild)
        {
            setLeft ((TLeft) newChild);

            return;
        }
    }
}
