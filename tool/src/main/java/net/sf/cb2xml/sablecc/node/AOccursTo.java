/* This file was generated by SableCC (http://www.sablecc.org/). */
package net.sf.cb2xml.sablecc.node;

import net.sf.cb2xml.sablecc.analysis.*;

import java.util.*;


public final class AOccursTo extends POccursTo
{
    private PNumber _number_;
    private TTo _to_;

    public AOccursTo ()
    {
    }

    public AOccursTo (PNumber _number_, TTo _to_)
    {
        setNumber (_number_);

        setTo (_to_);
    }

    public Object clone ()
    {
        return new AOccursTo((PNumber) cloneNode (_number_),
            (TTo) cloneNode (_to_));
    }

    public void apply (Switch sw)
    {
        ((Analysis) sw).caseAOccursTo (this);
    }

    public PNumber getNumber ()
    {
        return _number_;
    }

    public void setNumber (PNumber node)
    {
        if (_number_ != null)
        {
            _number_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _number_ = node;
    }

    public TTo getTo ()
    {
        return _to_;
    }

    public void setTo (TTo node)
    {
        if (_to_ != null)
        {
            _to_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _to_ = node;
    }

    public String toString ()
    {
        return "" + toString (_number_) + toString (_to_);
    }

    void removeChild (Node child)
    {
        if (_number_ == child)
        {
            _number_ = null;

            return;
        }

        if (_to_ == child)
        {
            _to_ = null;

            return;
        }
    }

    void replaceChild (Node oldChild, Node newChild)
    {
        if (_number_ == oldChild)
        {
            setNumber ((PNumber) newChild);

            return;
        }

        if (_to_ == oldChild)
        {
            setTo ((TTo) newChild);

            return;
        }
    }
}
