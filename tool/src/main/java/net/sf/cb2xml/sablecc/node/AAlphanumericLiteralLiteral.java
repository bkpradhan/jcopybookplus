/* This file was generated by SableCC (http://www.sablecc.org/). */
package net.sf.cb2xml.sablecc.node;

import net.sf.cb2xml.sablecc.analysis.*;

import java.util.*;


public final class AAlphanumericLiteralLiteral extends PLiteral
{
    private TAlphanumericLiteral _alphanumericLiteral_;

    public AAlphanumericLiteralLiteral ()
    {
    }

    public AAlphanumericLiteralLiteral (
        TAlphanumericLiteral _alphanumericLiteral_)
    {
        setAlphanumericLiteral (_alphanumericLiteral_);
    }

    public Object clone ()
    {
        return new AAlphanumericLiteralLiteral((TAlphanumericLiteral) cloneNode (
                _alphanumericLiteral_));
    }

    public void apply (Switch sw)
    {
        ((Analysis) sw).caseAAlphanumericLiteralLiteral (this);
    }

    public TAlphanumericLiteral getAlphanumericLiteral ()
    {
        return _alphanumericLiteral_;
    }

    public void setAlphanumericLiteral (TAlphanumericLiteral node)
    {
        if (_alphanumericLiteral_ != null)
        {
            _alphanumericLiteral_.parent (null);
        }

        if (node != null)
        {
            if (node.parent () != null)
            {
                node.parent ().removeChild (node);
            }

            node.parent (this);
        }

        _alphanumericLiteral_ = node;
    }

    public String toString ()
    {
        return "" + toString (_alphanumericLiteral_);
    }

    void removeChild (Node child)
    {
        if (_alphanumericLiteral_ == child)
        {
            _alphanumericLiteral_ = null;

            return;
        }
    }

    void replaceChild (Node oldChild, Node newChild)
    {
        if (_alphanumericLiteral_ == oldChild)
        {
            setAlphanumericLiteral ((TAlphanumericLiteral) newChild);

            return;
        }
    }
}
